<?php

/**
 * @package JooS
 */

/**
 * FS stream wrapper interface
 */
interface JooS_Stream_Wrapper_FS_Interface {
  /**
   * Retrieve information about a file
   *
   * @param string $url   Url
   * @param int    $flags Flags
   * 
   * @return array
   */
  public function url_stat($url, $flags);
  
  /**
   * Create a directory
   *
   * This method is called in response to mkdir().
   *
   * @param string $path    Path
   * @param int    $mode    Mode
   * @param int    $options Options
   * 
   * @link http://www.php.net/manual/en/streamwrapper.mkdir.php
   * @return boolean
   * @todo JooS_Stream_Wrapper_FS
   */
  public function mkdir($path, $mode, $options);
  
  /**
   * Removes a directory
   *
   * This method is called in response to rmdir().
   *
   * @param string $path    Path
   * @param int    $options Options
   * 
   * @link http://www.php.net/manual/en/streamwrapper.rmdir.php
   * @return boolean
   */
  public function rmdir($path, $options);
  
  /**
   * Delete a file
   * 
   * This method is called in response to unlink().
   * 
   * @param string $path Path
   * 
   * @link http://www.php.net/manual/en/streamwrapper.unlink.php
   * @return bool
   */
  public function unlink($path);
  
  /**
   * Renames a file or directory
   *
   * @param string $pathFrom Path from
   * @param string $pathTo   Path to
   * 
   * @link http://www.php.net/manual/en/streamwrapper.rename.php
   * @return boolean
   */
  public function rename($pathFrom, $pathTo);
  
  /**
   * Open directory handle
   *
   * This method is called in response to opendir().
   * 
   * @param string $path    Path
   * @param int    $options Options
   * 
   * @link http://www.php.net/manual/en/streamwrapper.dir-opendir.php
   * @return boolean
   * @todo JooS_Stream_Wrapper_FS
   */
  public function dir_opendir($path, $options);
  
  /**
   * Read entry from directory handle
   *
   * This method is called in response to readdir(). 
   *
   * @link http://www.php.net/manual/en/streamwrapper.dir-readdir.php
   * @return string
   * @todo JooS_Stream_Wrapper_FS
   */
  public function dir_readdir();
  
  /**
   * Close directory handle
   *
   * This method is called in response to closedir().
   * Any resources which were locked, or allocated, during opening and use of
   * the directory stream should be released.
   *
   * @link http://www.php.net/manual/en/streamwrapper.dir-closedir.php
   * @return boolean
   * @todo JooS_Stream_Wrapper_FS
   */
  public function dir_closedir();
  
  /**
   * Rewind directory handle
   *
   * This method is called in response to rewinddir().
   *
   * Should reset the output generated by stream::dir_readdir().
   * i.e.: The next call to stream::dir_readdir() should
   * return the first entry in the location returned by stream::dir_opendir().
   *
   * @link http://www.php.net/manual/en/streamwrapper.dir-rewinddir.php
   * @return boolean
   * @todo JooS_Stream_Wrapper_FS
   */
  public function dir_rewinddir();
  
}
